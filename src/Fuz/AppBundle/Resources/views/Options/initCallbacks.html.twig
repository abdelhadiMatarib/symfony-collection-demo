{% extends 'FuzAppBundle::layout.html.twig' %}

{% block extra_js %}
    <script src="{{ asset('js/jquery.collection.js') }}"></script>
{% endblock %}

{% block title %}JavaScript options : events at initialization{% endblock %}

{% block body %}

    <h2>{{ block('title') }}</h2>

    <p>
        Use <code>before_init</code> and <code>after_init</code>, options to set a callback before or after collection
        initialization.
    </p>

    <p>
        Those callbacks will receive the current <code>collection</code> as argument.
    </p>

    <p>Your callback doesn't require to return something.</p>

    <div class="row">

        <div class="col-md-12">
            <h3>Demo: click on the following button to initialize the collection.</h3>

            <button id="demo" class="btn btn-danger">Click me</button>
            <br/><br/>

            {% form_theme form 'jquery.collection.html.twig' %}
            {{ form(form) }}

            {% for value in formData.values %}
                <p>Value : {{ value }}</p>
            {% endfor %}

        </div>
    </div>

    <hr/>

    <p>Code used:</p>
    <pre>{{ block('script') | e }}</pre>

    {{
        tabs([
            'Base/BaseController.php',
            'Controller/OptionsController.php',
            'Resources/views/Options/initCallbacks.html.twig',
        ])
    }}

{% endblock %}

{% block script %}

    <script type="text/javascript">

        $('#demo').click(function() {
            $(this).remove();
            $('.form-collection').collection({
                before_init: function(collection) {
                    alert("As you can see, there are no buttons yet...");
                },
                after_init: function(collection) {
                    alert("Look! Now there are!!");
                }
            });
        });

    </script>

{% endblock %}
