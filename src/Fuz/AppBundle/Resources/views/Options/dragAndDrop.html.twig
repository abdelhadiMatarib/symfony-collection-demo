{% extends 'FuzAppBundle::layout.html.twig' %}

{% block extra_js %}
    <script src="{{ asset('bundles/fuzapp/js/collection/jquery.collection.js') }}"></script>
{% endblock %}

{% block title %}JavaScript options : drag & drop{% endblock %}

{% block body %}

    <h2>{{ block('title') }}</h2>

    <p>
        If <code>jquery.ui.sortable</code> is available within your application, your form collections will be automatically
        sortable using drag & drop. Do not hesitate to test this feature on all other forms in this demo website, even on
        collection of form collections.
    </p>

    <p>As this feature is enabled by default, set <code>drag_drop</code> option to <code>false</code> to disable it (see demo 1 below).</p>

    <p>You can play with <code>up</code> and <code>down</code> options to hide them (see demo 2 below).</p>

    <p>
        You can add custom <code>jquery.ui.sortable</code> options by setting them in <code>drag_drop_options</code> option (see demo 3 below).
        But as <code>start</code> and <code>update</code> sortable options are already used by this plugin, you should use
        <code>drag_drop_start</code> and <code>drag_drop_update</code> callbacks instead if needed (see demo 4 below).
    </p>

    <p>Drag & drop do not work if <code>allow_move_up</code> or <code>allow_move_down</code> are disabled.</p>

    {{
        github([
            'Controller/OptionsController.php',
            'Resources/views/Options/dragAndDrop.html.twig',
        ])
    }}
    
    <div class="row">

        {# demo 1: drag & drop disabled #}
        <div class="col-md-6 col-sm-12 col-xs-12">

            <h4>Demo 1: drag & drop disabled</h4>

            <p>
                You can't move those form fields using drag & drop.
            </p>

            {%
                form_theme disabled.disabled
                    'FuzAppBundle::jquery.collection.html.twig'
                    'FuzAppBundle:Options:options-theme.html.twig'
            %}
            {{ form(disabled.disabled) }}

            <hr/>

            {% for value in disabled.disabledData.values %}
                <p>Value : {{ value }}</p>
            {% endfor %}

            <hr/>

            <p>Code used:</p>
            <pre>{{ block('script_disabled') | e }}</pre>

        </div>

        {# demo 2: hidden move up/down buttons #}
        <div class="col-md-6 col-sm-12 col-xs-12">

            <h4>Demo 2: hidden move up/down buttons</h4>

            <p>
                Just create any invisible container with <code>collection-up</code> and <code>collection-down</code> in
                your form theme or explicitely display:none those css classes.
            </p>

            {%
                form_theme nobuttons.nobuttons
                    'FuzAppBundle::jquery.collection.html.twig'
                    'FuzAppBundle:Options:options-theme.html.twig'
            %}
            {{ form(nobuttons.nobuttons) }}

            <hr/>

            {% for value in nobuttons.nobuttonsData.values %}
                <p>Value : {{ value }}</p>
            {% endfor %}

            <hr/>

            <p>Code used:</p>
            <pre>{{ block('script_nobuttons') | e }}</pre>
        </div>

        {# demo 3: customize sortable options #}
        <div class="col-md-6 col-sm-12 col-xs-12">

            <h4>Demo 3: customize sortable options</h4>

            <p>
                You can give any standard options to <code>jquery.ui.sortable</code> by passing it to
                the <code>drag_drop_options</code> option.
            </p>

            {%
                form_theme moreoptions.moreoptions
                    'FuzAppBundle::jquery.collection.html.twig'
                    'FuzAppBundle:Options:options-theme.html.twig'
            %}
            {{ form(moreoptions.moreoptions) }}

            <hr/>

            {% for value in moreoptions.moreoptionsData.values %}
                <p>Value : {{ value }}</p>
            {% endfor %}

            <hr/>

            <p>Code used:</p>
            <pre>{{ block('script_moreoptions') | e }}</pre>
        </div>

        {# demo 4: use start/update sortable options #}
        <div class="col-md-6 col-sm-12 col-xs-12">

            <h4>Demo 4: use start/update sortable options</h4>

            <p>
                As this plugin uses the <code>start</code> and <code>update</code> sortable callbacks,
                you should use <code>drag_drop_start</code> and <code>drag_drop_update</code> options
                instead.
            </p>

            <div id="demo"><div class="alert alert-warning">Please drag & drop...</div></div>

            {%
                form_theme startupdate.startupdate
                    'FuzAppBundle::jquery.collection.html.twig'
                    'FuzAppBundle:Options:options-theme.html.twig'
            %}
            {{ form(startupdate.startupdate) }}

            <hr/>

            {% for value in startupdate.startupdateData.values %}
                <p>Value : {{ value }}</p>
            {% endfor %}

            <hr/>

            <p>Code used:</p>
            <pre>{{ block('script_startupdate') | e }}</pre>
        </div>

    </div>


{% endblock %}

{% block script %}

{% block script_disabled %}

    <script type="text/javascript">

        $('.disabled-collection').collection({
            drag_drop: false
        });

    </script>

{% endblock %}

{% block script_nobuttons %}

    <style>
        .nobuttons-collection .collection-up, .nobuttons-collection .collection-down {
            display:none;
        }
    </style>

    <script type="text/javascript">

        $('.nobuttons-collection').collection({
            up: '<div style="display:none;"></div>',
            down: '<div style="display:none;"></div>'
        });

    </script>

{% endblock %}

{% block script_moreoptions %}

    <script type="text/javascript">

        $('.moreoptions-collection').collection({
            drag_drop_options: {
                revert: true
            }
        });

    </script>

{% endblock %}

{% block script_startupdate %}

    <script type="text/javascript">

        var isDragging = false;
        $('.startupdate-collection').collection({
            drag_drop_options: {
                stop: function (ui, event, elements, element) {
                    if (isDragging) {
                        $('#demo').html('<div class="alert alert-warning">Position unchanged!</div>');
                        isDragging = false;
                    }
                }
            },
            drag_drop_start: function (ui, event, elements, element) {
                $('#demo').html('<div class="alert alert-danger">Dragging....</div>');
                isDragging = true;
            },
            drag_drop_update: function (ui, event, elements, element) {
                $('#demo').html('<div class="alert alert-success">Position updated!</div>');
                isDragging = false;
            }
        });

    </script>

{% endblock %}
{% endblock %}
